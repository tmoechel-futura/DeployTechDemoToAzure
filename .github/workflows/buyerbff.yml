# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: buyerbff

on:
  push:
    branches: [ "main"]
    paths:
      - FS.TechDemo.BuyerBFF/**
      - FS.TechDemo.Shared/**
      - .github/workflows/buyerbff.yml
      
#  pull_request:
#    branches: [ "main", "dev" ]
#    paths:
#      - FS.TechDemo.BuyerBFF/**
#      - FS.TechDemo.Shared/**
#      - .github/workflows/buyerbff.yml

env:
  SERVICE: buyerbff
  SERVICE_DIR: FS.TechDemo.BuyerBFF
  IMAGE: buyer-bff
  ACR_LOGON_SERVER: ${{ secrets.ACR_NAME }}.azurecr.io
  IMAGE_NAME: ${{ secrets.ACR_NAME }}.azurecr.io/buyer-bff:${{ github.sha }}
  
jobs:
#  BuildContainersForPR_Linux:
#    runs-on: ubuntu-latest
#    if: ${{ github.event_name == 'pull_request' }}
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#      - uses: ./.github/workflows/composite/build
#        with:
#          service: ${{ env.SERVICE }}
#          registry_endpoint: ${{ secrets.REGISTRY_ENDPOINT }}
  
  BuildLinux:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: 'Build and push image'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_LOGON_SERVER }}
          username: ${{ secrets.SERVICE_PRINCIPAL_ID }}
          password: ${{ secrets.SERVICE_PRINCIPAL_PASSWORD }}
      - run: docker build -t ${{ env.IMAGE_NAME }} -f ./${{ env.SERVICE_DIR }}/Dockerfile .
      - run: docker push ${{ env.IMAGE_NAME }}        

      - uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: 'Get secrets'
        id: azure-keyvault-secrets
        run: |
          secrets_get=(rabbitmqpassword)
          for secret_get in ${secrets_get[@]}
          do
            value=$(az keyvault secret show --name $secret_get --vault-name kvcontainerdeploydemo --query value --output tsv)
#            echo "::add-mask::$value"
            echo "$secret_get=$value" >> $GITHUB_OUTPUT
          done
      - name: "Show secrets"
        id: show-kv-secrets
        run: |
          echo ${{ steps.azure-keyvault-secrets.outputs.rabbitmqpassword }}
#      - uses: ./.github/workflows/composite/build-push
#        with:
#          service: ${{ env.SERVICE }}
#          registry_host: ${{ secrets.REGISTRY_HOST }}
#          registry_endpoint: ${{ secrets.REGISTRY_ENDPOINT }}
#          image_name: ${{ env.IMAGE }}
#          registry_username: ${{ secrets.USERNAME }}
#          registry_password: ${{ secrets.PASSWORD }}      