# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: order-service-deploy

on:
  workflow_dispatch:
  workflow_run:
    workflows: [ "order-service-build" ]
    branches: [ "main" ]
    types: [ completed ]
      
env:
  SERVICE: order-service
  SERVICE_DIR: FS.TechDemo.OrderService
  IMAGE: order-service
  ACR_LOGON_SERVER: ${{ secrets.ACR_NAME }}.azurecr.io
  IMAGE_NAME: ${{ secrets.ACR_NAME }}.azurecr.io/order-service:${{ github.sha }}
  
jobs:

  deploy-to-aks:
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main'

    env:
      NAMESPACE: dev

    steps:
      - name: 'Get secrets'
        id: azure-keyvault-secrets
        run: |
          secrets_get=(rabbitmqpassword)
          for secret_get in ${secrets_get[@]}
          do
            value=$(az keyvault secret show --name $secret_get --vault-name kvcontainerdeploydemo --query value --output tsv)
            echo "::add-mask::$value"
            echo "$secret_get=$value" >> $GITHUB_OUTPUT
          done
      # to checkout additional files required for deployment
      - uses: actions/checkout@v3

      - name: Replace tokens for Service Config
        uses: cschleiden/replace-tokens@v1
        with:
          files: ./${{env.SERVICE_DIR}}/${{env.SERVICE}}.yml
        env:
          idp-admin-password: admin-secret
          idp-admin-username: admin

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Set the target Azure Kubernetes Service (AKS) cluster. 
      - uses: azure/aks-set-context@v3.2
        with:
          cluster-name: ${{ secrets.AKS_NAME }}
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}

      # Create namespace if doesn't exist
      - run: |
          kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -

      # Create image pull secret for ACR
      - uses: azure/k8s-create-secret@v4
        with:
          container-registry-url: ${{ env.ACR_LOGON_SERVER }}
          container-registry-username: ${{ secrets.SERVICE_PRINCIPAL_ID }}
          container-registry-password: ${{ secrets.SERVICE_PRINCIPAL_PASSWORD }}
          secret-name: ${{ secrets.AKS_SECRET }}
          namespace: ${{ env.NAMESPACE }}

      # Deploy app to AKS
      - uses: azure/k8s-deploy@v4.9
        with:
          manifests: |
            FS.TechDemo.OrderService/order-service.yml
          images: |
            ${{ env.IMAGE_NAME }}
          imagepullsecrets: |
            ${{ secrets.AKS_SECRET }}
          namespace: ${{ env.NAMESPACE }}